// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String     @unique
  phone     String     @unique
  pwd       String
  addr      String
  d_addr    String?
  avatar    String?
  likes     Like[]
  likesCss  LikeCss[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  photos    Photo[]
  photosCss PhotoCss[]
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  skils     String?
  subject   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
}

model Hashtag {
  id         Int      @id @default(autoincrement())
  hashtag    String   @unique
  photos     Photo[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  photoCss   PhotoCss @relation(fields: [photoCssId], references: [id])
  photoCssId Int
}

model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@unique([photoId, userId])
  PhotoCss   PhotoCss? @relation(fields: [photoCssId], references: [id])
  photoCssId Int?
}

model LikeCss {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  photoCss   PhotoCss @relation(fields: [photoCssId], references: [id])
  photoCssId Int


  @@unique([userId, photoCssId])
}

model PhotoCss {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  skils     String?
  subject   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  LikeCss   LikeCss[]
}
