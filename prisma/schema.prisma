// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String     @unique
  phone     String     @unique
  pwd       String
  addr      String
  d_addr    String?
  avatar    String?
  likes     Like[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  likesCss  LikeCss[]
  photos    Photo[]
  photosCss PhotoCss[]
  photosRJ  PhotoRJ[]
  photosRN  PhotoRN[]
  LikeRJ    LikeRJ[]
  LikeRN    LikeRN[]
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User?      @relation(fields: [userId], references: [id])
  userId    Int?
  file      String
  file2     String?
  file3     String?
  file4     String?
  file5     String?
  file6     String?
  file7     String?
  file8     String?
  caption   String?
  skils     String?
  subject   String?
  subject2   String?
  subject3   String?
  subject4  String?
  subject5   String?
  subject6   String?
  subject7   String?
  subject8   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
}

model Hashtag {
  id         Int      @id @default(autoincrement())
  hashtag    String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  photoCss   PhotoCss @relation(fields: [photoCssId], references: [id])
  photoCssId Int
  photoRJ    PhotoRJ? @relation(fields: [photoRJId], references: [id])
  photoRJId  Int?
  photoRN    PhotoRN? @relation(fields: [photoRNId], references: [id])
  photoRNId  Int?
  photos     Photo    @relation(fields: [photoId], references: [id])
  photoId    Int
}

model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([photoId, userId])
}

model LikeCss {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  photoCss   PhotoCss @relation(fields: [photoCssId], references: [id])
  photoCssId Int
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, photoCssId])
}

model LikeRJ {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photoRJ   PhotoRJ  @relation(fields: [photoRJId], references: [id])
  photoRJId Int

  @@unique([userId, photoRJId])
}

model LikeRN {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photoRN   PhotoRN  @relation(fields: [photoRNId], references: [id])
  photoRNId Int

  @@unique([userId, photoRNId])
}

model PhotoCss {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  file2     String?
  file3     String?
  file4     String?
  file5     String?
  file6     String?
  file7     String?
  file8     String?
  caption   String?
  skils     String?
  subject   String?
   subject2   String?
  subject3   String?
  subject4  String?
  subject5   String?
  subject6   String?
  subject7   String?
  subject8   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likeCss   LikeCss[]

}

model PhotoRJ {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  file2     String?
  file3     String?
  file4     String?
  file5     String?
  file6     String?
  file7     String?
  file8     String?
  caption   String?
  skils     String?
  subject   String?
  subject2   String?
  subject3   String?
  subject4  String?
  subject5   String?
  subject6   String?
  subject7   String?
  subject8   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likeRJ    LikeRJ[]
}

model PhotoRN {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
   file2     String?
  file3     String?
  file4     String?
  file5     String?
  file6     String?
  file7     String?
  file8     String?
  caption   String?
  skils     String?
  subject   String?
   subject2   String?
  subject3   String?
  subject4  String?
  subject5   String?
  subject6   String?
  subject7   String?
  subject8   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likeRN    LikeRN[]
}

model  TotalCount {
  id Int @id @default(autoincrement())
  views Int @default(0)
}